{"version":3,"sources":["compound/common/header/bcharity_logo.png","compound/common/header/index.js","compound/common/navbar/index.js","compound/common/searchFilter/index.js","constants.js","components/common/Account/index.js","components/Marketplace/Order/AssetMetadata.js","components/Marketplace/Order/BundleMetadata.js","components/common/SalePrice.js","components/Marketplace/Order/index.js","components/Marketplace/Log/index.js","components/Marketplace/Sidebar/index.js","components/Marketplace/Sidebar/Sidebar.jsx","components/Marketplace/index.js","components/SignIn/interact.js","components/SignIn/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","alt","navbar","classNme","searchFilter","Navbar","href","SearchFilter","type","placeholder","DEFAULT_DECIMALS","web3Provider","web3","window","currentProvider","Web3","HttpProvider","networkCallbacks","onNetworkUpdate","callback","push","connectWallet","_connectWallet","apply","this","arguments","_callee","errorMessage","regenerator_default","wrap","_context","prev","next","PortisProvider","ethereum","enable","alert","Error","map","c","stop","Account","_this$props","props","account","showImage","_username","user","username","_address","address","displayName","substring","MAX_ADDR_LEN","toUpperCase","target","rel","concat","style","backgroundImage","image","React","Component","AssetMetadata","asset","Fragment","openseaLink","imageUrl","name","assetContract","BundleMetadata","bundle","permalink","DivImgWrapper","assets","i","key","imageUrlThumbnail","description","externalLink","styled","div","_templateObject","Object","taggedTemplateLiteral","SalePrice","order","currentPrice","paymentTokenContract","price","baseAmount","tokenContract","length","undefined","decimals","BigNumber","toString","pow","toUnitAmount","priceLabel","parseFloat","toLocaleString","minimumSignificantDigits","isETH","symbol","SpanSalePrice","span","SalePrice_templateObject","Card","attrs","Order_templateObject","Order","state","creatingOrder","error","_this2","setState","message","setTimeout","accountAddress","seaport","fulfillOrder","onError","t0","_this3","canAccept","_this$props2","buyAsset","_ref","asyncToGenerator","mark","_callee2","_context2","abrupt","disabled","onClick","SalePrice_SalePrice","_this4","_this$props3","sellAsset","_ref2","_callee3","_context3","expirationTime","timeLeft","moment","duration","unix","diff","humanize","_this$props4","makerAccount","listingTime","assetBundle","owner","ts","toNumber","timeLabel","local","fromNow","isOwner","toLowerCase","AssetMetadata_AssetMetadata","BundleMetadata_BundleMetadata","Account_Account","role","side","OrderSide","Buy","renderAcceptOfferButton","Sell","renderBuyButton","Log","orders","total","onlyForMe","onlyByMe","onlyBundles","page","fetchData","api","getOrders","maker","bundled","count","_this5","_this6","_this7","_this$state","ordersPerPage","pageSize","noMorePages","paginateTo","tabIndex","_this8","_this$state2","sellSide","buySide","data-toggle","toggleSide","toggleForMe","toggleByMe","toggleBundles","_this9","id","renderFilters","Order_Order","assign","renderPagination","Sidebar","updateSidebar","evt","console","log","innerText","document","querySelector","classList","remove","querySelectorAll","forEach","header","attributes","value","nodeValue","add","_x","reddit","Marketplace","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeAddress","OpenSeaPort","networkName","Network","Main","eth","getAccounts","err","res","ImgRibbon","Marketplace_Header","Marketplace_Sidebar","Log_Log","Marketplace_templateObject","img","_templateObject2","loadCurrentMessage","getCurrentWalletConnected","_ref3","addressArray","request","method","sent","status","SignIn","_useState","useState","_useState2","slicedToArray","setWallet","_useState3","_useState4","setStatus","_useState5","_useState6","setMessage","_useState7","_useState8","useEffect","_yield$getCurrentWall","on","accounts","class","App","react_router_dom","to","react_router","exact","path","component","Home","reportWebVitals","onPerfEntry","Function","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.54ccad04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bcharity_logo.3b9be324.png\";","import React from 'react';\r\nimport { Navbar } from '../../common';\r\nimport { SearchFilter } from '../../common';\r\nimport './bcharity_logo.png';\r\nimport './Header.css';\r\n\r\nfunction Header(){\r\n\r\n    /*\r\n    const updateSidebar = async (event) => {\r\n        console.log(event.target.innerText);\r\n        document.querySelector(\".active\").classList.remove(\"active\");\r\n        document.querySelectorAll(\".sidebar-\")\r\n\r\n    }\r\n    */\r\n\r\n    return (        \r\n        <section className = \"header\">\r\n            <section className = \"header-top__logo\">\r\n                <img src=\"./bcharity_logo.png\"alt=\"bcharity_logo\"></img>\r\n            </section>\r\n            <section className = \"header-top__BCHARITY\">\r\n                BCHARITY\r\n            </section>\r\n            <section className = \"header-top__navbar\">\r\n                <Navbar />\r\n            </section>\r\n            <section classNme = \"header-top__search\">\r\n                <SearchFilter />\r\n            </section>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar () {\r\n  return (\r\n    <section className=\"navbar\">\r\n      <a href=\"/status\" className=\"navbar-item\">Status</a>\r\n      <a href=\"/resources\" className=\"navbar-item\">Marketplace</a>\r\n      <a href=\"/market\" className=\"navbar-item\">Resources</a>\r\n  </section>\r\n  )\r\n\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport './Search.css';\r\n\r\nfunction SearchFilter(){\r\n  return (\r\n    <div className=\"Search\">\r\n      <input type=\"text\" placeholder=\"Search...\" />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default SearchFilter;\r\n","import * as Web3 from 'web3'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PortisProvider } from 'portis'\r\n\r\nexport const OPENSEA_URL = \"https://opensea.io\"\r\nexport const OPENSEA_JS_URL = \"https://github.com/ProjectOpenSea/opensea-js\"\r\nexport const GITHUB_URL = \"https://github.com/BCharity-Net/nft-frontend\"\r\nexport const DEFAULT_DECIMALS = 18\r\nexport let web3Provider = typeof web3 !== 'undefined'\r\n  ? window.web3.currentProvider\r\n  : new Web3.providers.HttpProvider('https://mainnet.infura.io')\r\n\r\n// Replace this with Redux for more complex logic\r\nconst networkCallbacks = []\r\nexport const onNetworkUpdate = (callback) => {\r\n  networkCallbacks.push(callback)\r\n}\r\n\r\nexport async function connectWallet() {\r\n  if (!window.web3) {\r\n    web3Provider = new PortisProvider({\r\n      // Put your Portis API key here\r\n    })\r\n  } else if (window.ethereum) {\r\n    window.ethereum.enable()\r\n  } else {\r\n    const errorMessage = 'You need an Ethereum wallet to interact with this marketplace. Unlock your wallet, get MetaMask.io or Portis on desktop, or get Trust Wallet or Coinbase Wallet on mobile.'\r\n    alert(errorMessage)\r\n    throw new Error(errorMessage)\r\n  }\r\n  networkCallbacks.map((c) => c(web3Provider))\r\n}\r\n\r\nexport function toUnitAmount(baseAmount, tokenContract = null) {\r\n  const decimals = tokenContract && tokenContract.decimals != null\r\n    ? tokenContract.decimals\r\n    : DEFAULT_DECIMALS\r\n\r\n  const amountBN = new BigNumber(baseAmount.toString())\r\n  return amountBN.div(new BigNumber(10).pow(decimals))\r\n}\r\n\r\nexport function toBaseUnitAmount(unitAmount, tokenContract = null) {\r\n  const decimals = tokenContract && tokenContract.decimals != null\r\n    ? tokenContract.decimals\r\n    : DEFAULT_DECIMALS\r\n\r\n  const amountBN = new BigNumber(unitAmount.toString())\r\n  return amountBN.times(new BigNumber(10).pow(decimals))\r\n}\r\n\r\nexport async function promisify(inner) {\r\n  return new Promise((resolve, reject) =>\r\n    inner((err, res) => {\r\n      if (err) { reject(err) }\r\n      resolve(res)\r\n    })\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { OPENSEA_URL } from '../../../constants';\r\nconst MAX_ADDR_LEN = 6\r\n\r\nexport default class Account extends React.Component {\r\n\r\n  static propTypes = {\r\n    account: PropTypes.shape({\r\n      address: PropTypes.string.isRequired,\r\n      user: PropTypes.shape({\r\n        username: PropTypes.string.isRequired\r\n      })\r\n    }).isRequired,\r\n    showImage: PropTypes.bool\r\n  }\r\n\r\n  render() {\r\n    const { account, showImage } = this.props;\r\n    const _username = account.user\r\n      ? account.user.username\r\n      : null;\r\n    const _address = account.address;\r\n    const displayName = _username ? _username : _address.substring(2, MAX_ADDR_LEN + 2).toUpperCase();\r\n\r\n    return (\r\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${OPENSEA_URL}/accounts/${_address}`}>\r\n        {showImage && account\r\n          ? <div style={{backgroundImage:'url(\"'+account.image+'\")'}} />\r\n          : null\r\n        }\r\n        <span>{displayName}</span>\r\n      </a>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport \"./AssetMetadata.css\";\r\n\r\nexport default class AssetMetadata extends React.Component {\r\n  render() {\r\n    const { asset } = this.props\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"card-container\">\r\n          <div className=\"img-container\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-center d-inline-block m-100\" href={asset.openseaLink}>\r\n              <img\r\n                className=\"card-image\"\r\n                alt=\"Asset artwork\"\r\n                src={asset.imageUrl} />\r\n            </a>\r\n          </div>\r\n            \r\n          <div className=\"card-body h-25\">\r\n            <p className=\"card-text text-truncate\">\r\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href={asset.openseaLink} className=\"card-link\">\r\n                <h5>{asset.name} {asset.assetContract.name}</h5>\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nexport default class BundleMetadata extends React.Component {\r\n  render() {\r\n    const { bundle } = this.props\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-center d-inline-block m-100\" href={bundle.permalink}>\r\n          <DivImgWrapper>\r\n            {bundle.assets.map((asset, i) =>\r\n              <img\r\n                className=\"small\"\r\n                alt=\"Asset Bundle artwork\"\r\n                key={i}\r\n                src={asset.imageUrlThumbnail || asset.imageUrl} />\r\n            )}\r\n          </DivImgWrapper>\r\n        </a>\r\n          \r\n        <div className=\"card-body h-25\">\r\n          <h5 className=\"card-title\">{bundle.name}</h5>\r\n          <p className=\"card-text text-truncate\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={bundle.permalink} className=\"card-link\">\r\n              {bundle.description}\r\n              <br />\r\n              {bundle.externalLink}\r\n            </a>\r\n          </p>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst DivImgWrapper = styled.div`\r\n  min-height: 120px;\r\n  max-height: 240px;\r\n  overflow-y: auto;\r\n  padding: 5px 0;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PropTypes from 'prop-types'\r\nimport { toUnitAmount } from '../../constants';\r\n\r\nexport default class SalePrice extends React.Component {\r\n  static propTypes = {\r\n    order: PropTypes.object.isRequired\r\n  }\r\n\r\n  render() {\r\n    const { order } = this.props\r\n    const { currentPrice, paymentTokenContract } = order\r\n    const price = toUnitAmount(currentPrice, paymentTokenContract)\r\n    const priceLabel = parseFloat(price).toLocaleString(undefined, { minimumSignificantDigits: 1 })\r\n    const isETH = paymentTokenContract.symbol === \"ETH\"\r\n\r\n    return (\r\n      <SpanSalePrice>\r\n        {isETH\r\n          ? \"Ξ\"\r\n          : null\r\n        }\r\n        {priceLabel} {isETH ? null : paymentTokenContract.symbol}\r\n      </SpanSalePrice>\r\n    )\r\n  }\r\n}\r\n\r\nconst SpanSalePrice = styled.span`\r\n  img {\r\n    height: 15px !important;\r\n  }\r\n`","import React from 'react'\r\nimport moment from 'moment'\r\nimport PropTypes from 'prop-types'\r\nimport Account from '../../common/Account'\r\nimport AssetMetadata from './AssetMetadata'\r\nimport BundleMetadata from './BundleMetadata'\r\nimport styled from 'styled-components';\r\nimport { connectWallet } from '../../../constants';\r\nimport { OrderSide } from 'opensea-js/lib/types';\r\nimport SalePrice from '../../common/SalePrice';\r\n\r\nconst Card = styled.div.attrs({ className: \"card mx-2 mb-4\" })`\r\n  /*min-width: 200px;\r\n  img {\r\n    height: 120px;\r\n    max-width: 100%;\r\n  }\r\n  img.small {\r\n    max-width: 50%;\r\n    height: 60px;\r\n  }*/\r\n`\r\n\r\nexport default class Order extends React.Component {\r\n\r\n  state = {\r\n    errorMessage: null,\r\n    creatingOrder: false\r\n  }\r\n\r\n  static propTypes = {\r\n    currentAccount: PropTypes.object,\r\n    order: PropTypes.shape({\r\n      makerAccount: PropTypes.object.isRequired\r\n    }).isRequired,\r\n    seaport: PropTypes.object.isRequired,\r\n    accountAddress: PropTypes.string\r\n  }\r\n\r\n  onError(error) {\r\n    // Ideally, you'd handle this error at a higher-level component\r\n    // using props or Redux\r\n    this.setState({ errorMessage: error.message })\r\n    setTimeout(() => this.setState({errorMessage: null}), 3000)\r\n    throw error\r\n  }\r\n\r\n  async fulfillOrder() {\r\n    const { order, accountAddress } = this.props\r\n    if (!accountAddress) {\r\n      await connectWallet()\r\n    }\r\n    try {\r\n      this.setState({ creatingOrder: true })\r\n      await this.props.seaport.fulfillOrder({ order, accountAddress })\r\n    } catch(error) {\r\n      this.onError(error)\r\n    } finally {\r\n      this.setState({ creatingOrder: false })\r\n    }\r\n  }\r\n\r\n  renderBuyButton(canAccept = true) {\r\n    const { creatingOrder } = this.state\r\n    const { accountAddress, order } = this.props\r\n    const buyAsset = async () => {\r\n      if (accountAddress && !canAccept) {\r\n        this.setState({\r\n          errorMessage: \"You already own this asset!\"\r\n        })\r\n        return\r\n      }\r\n      this.fulfillOrder()\r\n    }\r\n    return (\r\n      <button\r\n        disabled={creatingOrder}\r\n        onClick={buyAsset}\r\n        className=\"btn btn-primary w-100\">\r\n        \r\n        Buy{creatingOrder ? \"ing\" : \"\"} for <SalePrice order={order} />\r\n\r\n      </button>\r\n    )\r\n  }\r\n\r\n  renderAcceptOfferButton(canAccept = true) {\r\n    const { creatingOrder } = this.state\r\n    const { accountAddress, order } = this.props\r\n    \r\n    const sellAsset = async () => {\r\n      if (accountAddress && !canAccept) {\r\n        this.setState({\r\n          errorMessage: \"You do not own this asset!\"\r\n        })\r\n        return\r\n      }\r\n      this.fulfillOrder()\r\n    }\r\n    return (\r\n      <button\r\n        disabled={creatingOrder}\r\n        onClick={sellAsset}\r\n        className={`btn btn-success w-100`}>\r\n\r\n        Sell{creatingOrder ? \"ing\" : \"\"} for <SalePrice order={order} />\r\n\r\n      </button>\r\n    )\r\n  }\r\n\r\n  renderExpirationBadge() {\r\n    const expirationTime = parseFloat(this.props.order.expirationTime)\r\n\r\n    if (expirationTime <= 0) {\r\n      return null;\r\n    }\r\n\r\n    const timeLeft = moment.duration(moment.unix(expirationTime).diff(moment()))\r\n\r\n    return (\r\n      <span className=\"badge bid-expiry-badge red\">\r\n        <i className=\"tiny material-icons\">timer</i>\r\n        <span className=\"expire-label\">Expires in </span>\r\n        {timeLeft.humanize()}\r\n      </span>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { errorMessage } = this.state\r\n    const { order, accountAddress } = this.props\r\n    const { makerAccount, listingTime, asset, assetBundle } = order\r\n\r\n    const owner = asset\r\n      ? asset.owner\r\n      : assetBundle.assets[0].owner\r\n\r\n    const ts = listingTime.toNumber() * 1000\r\n    const timeLabel = moment(ts).local().fromNow()\r\n    const isOwner = accountAddress && accountAddress.toLowerCase() === owner.address.toLowerCase()\r\n\r\n    return (\r\n      <Card>\r\n        \r\n        {asset\r\n          ? <AssetMetadata asset={asset} />\r\n          : <BundleMetadata bundle={assetBundle} />\r\n        }\r\n        \r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            Offered by <Account account={makerAccount} />\r\n          </li>\r\n          { errorMessage\r\n            ? <div className=\"alert alert-warning mb-0\" role=\"alert\">\r\n                {errorMessage}\r\n              </div>\r\n            : <li className=\"list-group-item\">\r\n                {order.side === OrderSide.Buy\r\n                  ? this.renderAcceptOfferButton(isOwner)\r\n                  : null\r\n                }\r\n                {order.side === OrderSide.Sell\r\n                  ? this.renderBuyButton(!isOwner)\r\n                  : null\r\n                }\r\n              </li>\r\n          }\r\n        </ul>\r\n        <div className=\"card-footer\">\r\n          <small className=\"text-muted\">Posted {timeLabel}</small>\r\n        </div>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Order from '../Order';\r\nimport { OrderSide } from 'opensea-js/lib/types';\r\nimport { connectWallet } from '../../../constants';\r\n\r\nexport default class Log extends React.Component {\r\n  static propTypes = {\r\n    seaport: PropTypes.object.isRequired,\r\n    accountAddress: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    orders: undefined,\r\n    total: 0,\r\n    side: undefined,\r\n    onlyForMe: false,\r\n    onlyByMe: false,\r\n    onlyBundles: false,\r\n    page: 1\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  async fetchData() {\r\n    const { accountAddress } = this.props\r\n    const { orders, count } = await this.props.seaport.api.getOrders({\r\n      maker: this.state.onlyByMe ? accountAddress : undefined,\r\n      owner: this.state.onlyForMe ? accountAddress : undefined,\r\n      side: this.state.side,\r\n      bundled: this.state.onlyBundles ? true : undefined\r\n      // Possible query options:\r\n      // 'asset_contract_address'\r\n      // 'taker'\r\n      // 'token_id'\r\n      // 'token_ids'\r\n      // 'sale_kind'\r\n      \r\n    }, this.state.page)\r\n\r\n    this.setState({ orders, total: count })\r\n  }\r\n\r\n  paginateTo(page) {\r\n    this.setState({ orders: undefined, page }, () => this.fetchData())\r\n  }\r\n\r\n  toggleSide(side) {\r\n    if (this.state.side === side) {\r\n      side = undefined\r\n    }\r\n    this.setState({\r\n      orders: undefined,\r\n      side,\r\n      onlyForMe: undefined\r\n    }, () => this.fetchData())\r\n  }\r\n\r\n  async toggleForMe() {\r\n    const { accountAddress } = this.props\r\n    if (!accountAddress) {\r\n      await connectWallet()\r\n    }\r\n    const { onlyForMe } = this.state\r\n    this.setState( {\r\n      orders: undefined,\r\n      onlyForMe: !onlyForMe,\r\n      onlyByMe: false,\r\n      // Doesn't make sense to show sell orders the user makes\r\n      side: onlyForMe ? undefined : OrderSide.Buy,\r\n    }, () => this.fetchData())\r\n  }\r\n\r\n  toggleBundles() {\r\n    const { onlyBundles } = this.state\r\n    this.setState( {\r\n      orders: undefined,\r\n      onlyBundles: !onlyBundles,\r\n      onlyByMe: false,\r\n      // Only sell-side for now\r\n      side: OrderSide.Sell,\r\n    }, () => this.fetchData())\r\n  }\r\n\r\n  async toggleByMe() {\r\n    const { accountAddress } = this.props\r\n    if (!accountAddress) {\r\n      await connectWallet()\r\n    }\r\n    const { onlyByMe } = this.state\r\n    this.setState( {\r\n      orders: undefined,\r\n      onlyByMe: !onlyByMe,\r\n      onlyForMe: false\r\n    }, () => this.fetchData())\r\n  }\r\n\r\n  renderPagination() {\r\n    const { page, total } = this.state\r\n    const ordersPerPage = this.props.seaport.api.pageSize\r\n    const noMorePages = page*ordersPerPage >= total\r\n    return (\r\n      <nav>\r\n        <ul className=\"pagination justify-content-center\">\r\n          <li className={\"page-item \" + (page === 1 ? \"disabled\" : \"\")}>\r\n            <a className=\"page-link\" href=\"#Log\"\r\n              onClick={() => this.paginateTo(page - 1)} tabIndex=\"-1\">\r\n              Previous\r\n            </a>\r\n          </li>\r\n          <li className={\"page-item \" + (noMorePages ? \"disabled\" : \"\")}>\r\n            <a className=\"page-link\" href=\"#Log\"\r\n              onClick={() => this.paginateTo(page + 1)}>\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    )\r\n  }\r\n\r\n  renderFilters() {\r\n    const { onlyByMe, onlyForMe, onlyBundles } = this.state\r\n    const sellSide = this.state.side === OrderSide.Sell\r\n    const buySide = this.state.side === OrderSide.Buy\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"mb-3 ml-4\">\r\n          Filter orderbook:\r\n          <div className=\"btn-group ml-4\" role=\"group\">\r\n            <button type=\"button\" className={\"btn btn-outline-primary \" + (sellSide ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleSide(OrderSide.Sell)}>\r\n              Auctions\r\n            </button>\r\n            <button type=\"button\" className={\"btn btn-outline-success \" + (buySide ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleSide(OrderSide.Buy)}>\r\n              Bids\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3 ml-4\">\r\n          <div className=\"btn-group\" role=\"group\">\r\n            <button type=\"button\" className={\"btn btn-outline-secondary \" + (onlyForMe ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleForMe()}>\r\n              For Me\r\n            </button>\r\n            <button type=\"button\" className={\"btn btn-outline-secondary \" + (onlyByMe ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleByMe()}>\r\n              By Me\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3 ml-4\">\r\n          <button type=\"button\" className={\"btn btn-outline-info \" + (onlyBundles ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleBundles()}>\r\n            Bundles\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { orders } = this.state\r\n\r\n    return (\r\n      <div className=\"container py-3\" id=\"Log\">\r\n\r\n        {this.renderFilters()}\r\n\r\n        {orders != null\r\n        \r\n          ? <React.Fragment>\r\n              <div className=\"card-deck\">\r\n                {orders.map((order, i) => {\r\n                  return <Order {...this.props} key={i} order={order}  />\r\n                })}\r\n              </div>\r\n              {this.renderPagination()}\r\n            </React.Fragment>\r\n\r\n          : <div className=\"text-center\">Loading...</div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Sidebar from './Sidebar'\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport {Reddit} from \"react-bootstrap-icons\";\r\n// import {useState} from \"react\";\r\n\r\nimport './Sidebar.css'\r\n\r\nconst Sidebar = () => {\r\n\r\n  /**\r\n   * Updates the sidebar with the most recently selected list header.\r\n   * This function is called on the click event for any sidebar-listheader element.\r\n   *\r\n   * This will deactivate the current \"active\"/opened list and activate the\r\n   * sidebar item of the same value.\r\n   *\r\n   * @param evt The onClick event argument.\r\n   */\r\n  const updateSidebar = async (evt) => {\r\n    console.log(evt.target.innerText);\r\n    document.querySelector(\".active\").classList.remove(\"active\");\r\n    document.querySelectorAll(\".sidebar-item\").forEach((header) => {\r\n      if(header.attributes.value.nodeValue !== evt.target.innerText){\r\n        return;\r\n      }\r\n\r\n      header.classList.add(\"active\");\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section className=\"sidebar\">\r\n      <div className=\"sidebar-item-container\">\r\n        <ul className=\"sidebar-item active\" value={\"Status\"}>\r\n          <h3 className=\"sidebar-listheader\" onClick={updateSidebar}>Status</h3>\r\n          <div className=\"list-items-container\">\r\n            <li className=\"list-item\">Buy Now</li>\r\n            <li className=\"list-item\">itema2</li>\r\n          </div>\r\n        </ul>\r\n        <ul className=\"sidebar-item\" value={\"Price\"}>\r\n          <h3 className=\"sidebar-listheader\" onClick={updateSidebar}>Price</h3>\r\n          <div className=\"list-items-container\">\r\n            <li className=\"list-item\">itemb1</li>\r\n            <li className=\"list-item\">itemb2</li>\r\n          </div>\r\n        </ul>\r\n        <ul className=\"sidebar-item\" value={\"Categories\"}>\r\n          <h3 className=\"sidebar-listheader\" onClick={updateSidebar}>Categories</h3>\r\n          <div className=\"list-items-container\">\r\n            <li className=\"list-item\">itemc1</li>\r\n            <li className=\"list-item\">itemc2</li>\r\n          </div>\r\n        </ul>\r\n        <ul className=\"sidebar-item\" value={\"Charities\"}>\r\n          <h3 className=\"sidebar-listheader\" onClick={updateSidebar}>Charities</h3>\r\n          <div className=\"list-items-container\">\r\n            <li className=\"list-item\">itemd1</li>\r\n            <li className=\"list-item\">itemd2</li>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n      <div className=\"sidebar-item social-media-container\" value={\"socials\"}>\r\n        <a href={\"https://www.reddit.com/r/BCharity/\"} className=\"social-media-link\">\r\n          <Reddit />\r\n        </a>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Log from './Log'\r\nimport \"./index.css\";\r\nimport { OpenSeaPort, Network } from 'opensea-js';\r\nimport Sidebar from \"./Sidebar\";\r\nimport { web3Provider, onNetworkUpdate, OPENSEA_JS_URL, GITHUB_URL } from '../../constants';\r\n\r\n\r\nexport default class Marketplace extends React.Component {\r\n\r\n  state = {\r\n    accountAddress: null\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.onChangeAddress()\r\n    onNetworkUpdate(this.onChangeAddress)\r\n  }\r\n\r\n  onChangeAddress = () => {\r\n    this.seaport = new OpenSeaPort(web3Provider, {\r\n      networkName: Network.Main\r\n    })\r\n    this.web3 = this.seaport.web3\r\n    this.web3.eth.getAccounts((err, res) => {\r\n      if(!res){\r\n        this.setState({\r\n          accountAddress: \"\",\r\n        });\r\n\r\n        return;\r\n      }\r\n      this.setState({\r\n        accountAddress: res[0]\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <a href={GITHUB_URL}>\r\n          <ImgRibbon src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\" alt=\"Fork me on GitHub\" />\r\n        </a>\r\n        <Header>\r\n          <h1 className=\"title\">\r\n            The Ship's Log\r\n          </h1>\r\n          <h4 className=\"subtitle\">\r\n          Lorem ipsum sit amet, consectetur adipiscing elit.\r\n          </h4>\r\n          <h6>\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={OPENSEA_JS_URL}>\r\n              <img alt=\"OpenSea logo\" className=\"mr-2\" src=\"/opensea-logo.png\" />OpenSea.js\r\n            </a> example dapp\r\n          </h6>\r\n        </Header>\r\n        <Sidebar />\r\n        <main>\r\n          <Log\r\n            seaport={this.seaport}\r\n            accountAddress={this.state.accountAddress} />\r\n        </main>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst Header = styled.header`\r\n  border-bottom: 1px solid lightgrey;\r\n  padding: 10px;\r\n  text-align: center;\r\n  background-color: #f4f9fd;\r\n\r\n  h6 img {\r\n    width: 24px;\r\n  }\r\n`\r\n\r\nconst ImgRibbon = styled.img`\r\n  width: 150px;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  border: 0;\r\n\r\n  @media(max-width: 600px) {\r\n    width: 80px;\r\n  }\r\n`\r\n","// export const smartcontract;\r\nimport React from \"react\";\r\n\r\n/*\r\nThis function handles the logic of loading the current message stored in the smart contract\r\nIt will make a read call to the smartcontract using Web3 API\r\n*/\r\nexport const loadCurrentMessage = async () => {\r\n    //const message = await oursmartContract.methods.message().call();\r\n    //return message;\r\n};\r\n\r\n// This function will connect the user's Metamask to dApp\r\nexport const connectWallet = async () => {\r\n    if (window.ethereum){\r\n        try{\r\n            const addressArray = await window.ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n            });\r\n            const obj = {\r\n                status: \"Write a message in the text-field above\",\r\n                address: addressArray[0],\r\n            };\r\n            return obj;\r\n        } catch (err){\r\n            return {\r\n                address: \"\",\r\n                status: \"An error occured\" + err.message,\r\n            };\r\n        }\r\n    } else {\r\n        return {\r\n            address: \" \",\r\n            status: (\r\n                <span>\r\n                    <p>\r\n                        <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n                            You must install Metamask in your browser\r\n                        </a>\r\n                    </p>\r\n                </span>\r\n            ),\r\n        };\r\n    }\r\n};\r\n\r\n/* \r\nThis function will check if an Ethereum account is already connected to the dApp on page,\r\nThen load and update the UI accordingly\r\n*/\r\nexport const getCurrentWalletConnected = async () => {\r\n    if (window.ethereum){\r\n        try {\r\n            const addressArray = await window.ethereum.request({\r\n                method: \"eth_accounts\",\r\n            });\r\n            if (addressArray.length > 0){\r\n                return {\r\n                    address: addressArray[0],\r\n                    status: \"Write a message in the text-field above,\"\r\n                };\r\n            } else {\r\n                return {\r\n                    address:\"\",\r\n                    status: \"Connect to Metamsk by clicking the Sign In button\"\r\n                }\r\n            }\r\n        } catch (err) {\r\n            return {\r\n                address: \"\",\r\n                status: \"😥 \" + err.message,\r\n            };\r\n        }\r\n    } else {\r\n        return {\r\n            address: \"\",\r\n            status: (\r\n                <span>\r\n                    <p>\r\n                        {\" \"}🦊{\" \"}\r\n                        <a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n                            You must instll Metamask, a virtual Ethereum wallet in your browser.\r\n                        </a>\r\n                    </p>\r\n                </span>\r\n            ),\r\n        };\r\n    }\r\n};\r\n\r\n/*\r\nThis function will update the message stored in the smart contract. It will make a write call to the smart\r\ncontract, so the user's Metamask wallet will have to sign an Ethereum transcation to update the message\r\n*/\r\nexport const updateMessage = async (address, message) => {\r\n    \r\n    if (!window.ethereum || address === null){\r\n        return {\r\n            status: \"Connect your Metamask wallet to update the message on the blockchain.\",\r\n        };\r\n    }\r\n\r\n    if (message.trim() === \"\"){\r\n        return {\r\n            status: \"Your message cannot be an empty string.\",\r\n        };\r\n    }\r\n    /*\r\n    // Set up transcation parameters\r\n    const transcationParameters = {\r\n        to: contractAddress, \r\n        from: address,\r\n        data: oursmartContract.methods.update(message).encodeABI(),\r\n    }; \r\n\r\n    // Sign the transaction\r\n    try {\r\n        const txHash = await window.ethereum.request({\r\n            method: \"eth_sendTransaction\",\r\n            params: [transcationParameters],\r\n        });\r\n        return {\r\n            status: (\r\n                <span>\r\n                    ✅{\" \"}\r\n                    <a target=\"_blank\" href={`https.//ropsten.etherscan.io/tx/${txHash}`}>\r\n                    View the status of your transcation on Etherscan!\r\n                    </a>\r\n                    <br />\r\n                    Once the transcation is verified by the network, the message will be updated automatically.\r\n                </span>\r\n            ),\r\n        };\r\n    } catch (error) {\r\n        return {\r\n            status: \"😥 \" + error.message,\r\n        };\r\n    }\r\n    */\r\n};","/**\r\n * @Stuart (person who created the file), (other people who developed this file)\r\n *\r\n * @version 2021.06.22.1 - adding the names of necessary functions\r\n * 2021.06.22.0 - file created\r\n * \r\n * @since 2021.06.22.0\r\n */\r\n\r\n/** constructor()\r\n * The constructor of the object\r\n * \r\n * @param \r\n *\r\n * @return Does not return anything\r\n */\r\n\r\n/** renderSignInButton()\r\n * Renders the button that allows users to sign into the MetaMask wallet.\r\n * First: Check if MetaMask is available on browser or if a user is already\r\n * connected to the wallet. If not, MetaMask extension which allows user to \r\n * sign in with their MetaMask account.\r\n * \r\n * @param (parameter name) (Description of any parameter inputs)\r\n *\r\n * @return HTML\r\n */\r\n\r\nimport { string } from \"prop-types\";\r\nimport React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n\t//oursmartcontract\r\n\tconnectWallet,\r\n\tupdateMessage,\r\n\tloadCurrentMessage,\r\n\tgetCurrentWalletConnected,\r\n} from \"./interact.js\";\r\n\r\nconst SignIn = () => { // Change the name after\r\n  //state variables\r\n  const [walletAddress, setWallet] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [message, setMessage] = useState(\"No connection to the network.\"); //default message\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n\r\n  /*\r\n  This is a React hook that is called after your compoent is rendered.\r\n  Because it has an empty array [] prop passed into it, it will only\r\n  be called on the component's first render.\r\n  */\r\n  useEffect(async () => {\r\n  \tconst message = await loadCurrentMessage();\r\n  \tsetMessage(message);\r\n  \taddSmartContractListener();\r\n\r\n  \tconst { address, status } = await getCurrentWalletConnected();\r\n  \tsetWallet(address)\r\n  \tsetStatus(status);\r\n\r\n  \taddWalletListener();\r\n  }, []);\r\n\r\n  /*\r\n  This function sets up a listener that will watch for the smart contract's\r\n  updateMessages event and update the UI when the information is chaaned in \r\n  the smart contract\r\n  */\r\n  function addSmartContractListener(){\r\n  \t/*\r\n  \tourSmartContract.events.updatedMessages({}, (error, data) => {\r\n  \t\tif (error){\r\n  \t\t\tsetStatus(\"😥 \" + error.message)\r\n  \t\t} else {\r\n  \t\t\tsetMessage(data.returnValues[i]);\r\n  \t\t\tsetNewMessage(\"\");\r\n  \t\t\tsetStatus(\" Your message has been updated!\");\r\n  \t\t}\r\n  \t});\r\n  \t*/\r\n  }\r\n\r\n  /*\r\n  This function sets up a listener that detects changes in the user's Metamask\r\n  wallet state, such as when the user disconnects their wallet or switch addresses\r\n  */\r\n  function addWalletListener(){\r\n  \tif (window.ethereum){\r\n  \t\twindow.ethereum.on(\"accountsChanged\", (accounts) => {\r\n  \t\t\tif (accounts.length > 0){\r\n  \t\t\t\tsetWallet(accounts[0]);\r\n  \t\t\t\tsetStatus(\"Write a message in the text-field above.\");\r\n  \t\t\t} else {\r\n  \t\t\t\tsetWallet(\"\");\r\n  \t\t\t\tsetStatus(\"Connect to Metamask using the top right button.\");\r\n  \t\t\t}\r\n  \t\t});\r\n  \t} else {\r\n  \t\tsetStatus(\r\n  \t\t\t<p>\r\n  \t\t\t\t{\" \"}🦊{\" \"}\r\n  \t\t\t\t<a target=\"_blank\" href={`https://metamask.io/download.html`}>\r\n  \t\t\t\tYou must install Metamask in your browser.\r\n  \t\t\t\t</a>\r\n  \t\t\t</p>\r\n\t\t);\r\n  \t}\r\n  }\r\n\r\n  /*\r\n  This function will be called to connect the user's Metamask wallet to frontend\r\n  */\r\n  const connectWalletPressed = async () => {\r\n  \tconst walletResponse = await connectWallet();\r\n  \tsetStatus(walletResponse.status);\r\n  \tsetWallet(walletResponse.address);\r\n  };\r\n\r\n  /*\r\n  This function will be called when the user wants to update the message stored\r\n  in the smart contract\r\n  */\r\n  const onUpdatePressed = async() => {\r\n  \tconst { status } = await updateMessage(walletAddress, newMessage);\r\n  \tsetStatus(status);\r\n  };\r\n\r\n  // The UI of the sign-in page\r\n  return (\r\n          <main id=\"main\">\r\n      <h2 class=\"header\" id=\"header\">\r\n      Sign in to your wallet!\r\n       </h2>\r\n  \r\n    <div id=\"img-div\" class=\"img-div\">\r\n      <img src=\"https://upload.wikimedia.org/wikipedia/commons/2/24/NFT_Icon.png\" id=\"wallet-img\" alt=\"Your very own NFT Wallet\" class=\"wallet-img\">\r\n      </img>\r\n      </div>\r\n  \r\n  {/*} i wanted to use javascript to make the 'sign in' button, but i dont know how to incorporate that yet\r\n  */}\r\n  \r\n          <div id=\"different-wallet\" class=\"different-wallet\">\r\n      <button class=\"wallet-dropdown\"> → USE A DIFFERENT WALLET</button>\r\n        <div class=\"wallet-options\">\r\n          <a href=\"#\">Option 1</a>\r\n          <a href=\"#\">Option 2</a>\r\n          <a href=\"#\">Option 3</a>\r\n        </div>\r\n        {/*} don't know how to make this a dropdown menu like the opensea one\r\n        */}\r\n          </div>\r\n      </main>\r\n  )\r\n};\r\n\r\nexport default SignIn;\r\n","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport {Header, Navbar} from './compound/common';\r\nimport Marketplace from \"./components/Marketplace\";\r\nimport SignIn from './components/SignIn';\r\nimport './App.css';\r\n\r\nclass App extends React.Component{\r\n  render(){\r\n    return (\r\n      <div className = \"App\">\r\n        <Header />\r\n        <Navbar />\r\n        <Router>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/marketplace\">Marketplace</Link>\r\n              </li>\r\n              <li>\r\n                <Link to='/SignIn'>SignIn</Link>\r\n              </li>\r\n            </ul>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/marketplace\" component={Marketplace} />\r\n            <Route path=\"/SignIn\" component={SignIn}/>\r\n          </div>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// next line is very temporary\r\nclass Home extends React.Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <h2>home</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}